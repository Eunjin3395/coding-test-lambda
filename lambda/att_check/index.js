const AWS = require("aws-sdk");
const dayjs = require("dayjs");
const axios = require("axios");
require("dayjs/locale/ko");
const utc = require("dayjs/plugin/utc");
const timezone = require("dayjs/plugin/timezone");
require("dotenv").config();

dayjs.extend(utc);
dayjs.extend(timezone);

const TABLE_NAME = "VoiceChannelMembers";
const TARGET_CHANNEL_ID = process.env.TARGET_CHANNEL_ID;
const DISCORD_WEBHOOK = process.env.DISCORD_WEBHOOK;

const USER_MAP = {
  eunjin3395: "ÏùÄÏßÑ",
  rimi_lim: "Ìö®Î¶º",
  kslvy: "Í≤ΩÏùÄ",
  j11gen: "ÏÑ±Ïú§",
};

// ‚úÖ KST Í∏∞Ï§Ä ÎÇ†Ïßú Î¨∏ÏûêÏó¥ Î∞òÌôò
const getTodayKSTDate = () => dayjs().tz("Asia/Seoul").format("YYYY-MM-DD");
const getNowKSTDateTime = () => dayjs().tz("Asia/Seoul").format("YYYY-MM-DD HH:mm:ss");

// ‚úÖ username ‚Üí Ïù¥Î¶Ñ Î≥ÄÌôò
const displayName = (username) => USER_MAP[username] || username;

const dynamo = new AWS.DynamoDB.DocumentClient({
  region: process.env.AWS_REGION,
  accessKeyId: process.env.AWS_ACCESS_KEY_ID,
  secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY,
});

// ‚úÖ ÎîîÏä§ÏΩîÎìú Î©îÏãúÏßÄ Ï†ÑÏÜ°
const sendDiscord = async (joinedUsers, notJoinedUsers, now) => {
  try {
    const joinedMsg = joinedUsers.length
      ? "### ‚úÖ Ï∂úÏÑù\n" +
        joinedUsers
          .map(displayName)
          .map((u) => `- ${u}`)
          .join("\n")
      : "";

    const notJoinedMsg = notJoinedUsers.length
      ? "### ‚è∞ ÏßÄÍ∞Å\n" +
        notJoinedUsers
          .map(displayName)
          .map((u) => `- ${u}`)
          .join("\n")
      : "";

    const message = [`## ‚òëÔ∏è ${getTodayKSTDate()} Ï∂úÏÑù Ï≤¥ÌÅ¨\n`, joinedMsg, "", notJoinedMsg, `\n*${now}*`].join("\n");

    const response = await axios.post(`${DISCORD_WEBHOOK}?wait=true`, { content: message });

    const messageId = response.data.id; // Î©îÏãúÏßÄ ID
    console.log(`‚úÖ Discord Î©îÏãúÏßÄ Ï†ÑÏÜ° ÏôÑÎ£å (messageId: ${messageId})`);

    return messageId;
  } catch (error) {
    console.error("‚ùå Discord Î©îÏãúÏßÄ Ï†ÑÏÜ° Ïò§Î•ò:", error);
    return null;
  }
};

const saveAttendanceMessage = async ({ messageId, joinedUsers, lateUsers, sentAt }) => {
  const date = dayjs(sentAt).tz("Asia/Seoul").format("YYYY-MM-DD");

  const item = {
    date, // ÌååÌã∞ÏÖò ÌÇ§
    messageId, // Ï†ïÎ†¨ ÌÇ§
    sentAt,
    attendance: {
      joined: joinedUsers,
      late: lateUsers,
    },
  };

  await dynamo
    .put({
      TableName: "AttendanceMessageHistory",
      Item: item,
    })
    .promise();

  console.log(`‚úÖ Ï∂úÏÑù Í∏∞Î°ù Ï†ÄÏû• ÏôÑÎ£å (${date}, ${messageId})`);
};

// ‚úÖ Î©îÏù∏ Lambda Ìï®Ïàò
const handler = async () => {
  try {
    const now = getNowKSTDateTime();

    const params = {
      TableName: TABLE_NAME,
      KeyConditionExpression: "channelId = :channelId",
      ExpressionAttributeValues: {
        ":channelId": TARGET_CHANNEL_ID,
      },
    };

    const result = await dynamo.query(params).promise();
    const joinedUsers = result.Items.map((item) => item.username);
    const allUsers = Object.keys(USER_MAP);
    const lateUsers = allUsers.filter((uname) => !joinedUsers.includes(uname));

    console.log(`üìÖ ${now} Í∏∞Ï§Ä ÏùåÏÑ± Ï±ÑÎÑê ÏÉÅÌÉú`);
    console.log("‚úÖ Ï†ëÏÜç Ï§ë:");
    joinedUsers.forEach((u) => console.log(`- ${displayName(u)}`));
    console.log("\n‚ùå ÎØ∏Ï†ëÏÜç:");
    lateUsers.forEach((u) => console.log(`- ${displayName(u)}`));

    const messageId = await sendDiscord(joinedUsers, lateUsers, now);

    await saveAttendanceMessage({
      messageId,
      joinedUsers,
      lateUsers,
      sentAt: now,
    });

    return {
      statusCode: 200,
      body: JSON.stringify({
        timestamp: now,
        joined: joinedUsers.map(displayName),
        notJoined: lateUsers.map(displayName),
      }),
    };
  } catch (err) {
    console.error("‚ùå Lambda Ïã§Ìñâ Ïò§Î•ò:", err);
    return {
      statusCode: 500,
      body: JSON.stringify({ error: err.message }),
    };
  }
};

module.exports = { handler };
